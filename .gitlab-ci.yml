stages:
  - build
  - test
  - deploy

cache:
  paths:
    - node_modules/

build_app:
  image: node:14.16.0-alpine3.10
  stage: build
  before_script:
    - yarn
  script:
    - yarn run build
  only:
    - merge_requests

run_tests:
  image: node:14.16.0-alpine3.10
  stage: test
  services:
    - postgres:alpine
  variables:
    POSTGRES_DB: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - yarn
  script:
    - yarn run test
  only:
    - merge_requests

deploy_staging:
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  before_script:
    - apk add --no-cache nodejs npm
    - npm install -g heroku
  script:
    - heroku container:login
    - heroku container:push web -a $HEROKU_APP_STAGING
    - heroku container:release web -a $HEROKU_APP_STAGING
  when: manual
  only:
    - develop

deploy_prod:
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  before_script:
    - apk add --no-cache nodejs npm
    - npm install -g heroku
  script:
    - heroku container:login
    - heroku container:push web -a $HEROKU_APP_PRODUCTION
    - heroku container:release web -a $HEROKU_APP_PRODUCTION
  when: manual
  only:
    - develop
    - main
